{
  "_args": [
    [
      {
        "raw": "amazon-product-api",
        "scope": null,
        "escapedName": "amazon-product-api",
        "name": "amazon-product-api",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "C:\\Users\\Patrick\\Documents\\fastbuy"
    ]
  ],
  "_from": "amazon-product-api@latest",
  "_id": "amazon-product-api@0.4.3",
  "_inCache": true,
  "_location": "/amazon-product-api",
  "_nodeVersion": "6.9.1",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/amazon-product-api-0.4.3.tgz_1485471237963_0.3463175571523607"
  },
  "_npmUser": {
    "name": "mastert",
    "email": "hi@simonthiboutot.com"
  },
  "_npmVersion": "3.10.8",
  "_phantomChildren": {},
  "_requested": {
    "raw": "amazon-product-api",
    "scope": null,
    "escapedName": "amazon-product-api",
    "name": "amazon-product-api",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/amazon-product-api/-/amazon-product-api-0.4.3.tgz",
  "_shasum": "9df440e71ecbc8da5fc985a9fc3d5a4171e11f1c",
  "_shrinkwrap": null,
  "_spec": "amazon-product-api",
  "_where": "C:\\Users\\Patrick\\Documents\\fastbuy",
  "author": {
    "name": "Dmitry Mazuro",
    "email": "dmitry.mazuro@icloud.com"
  },
  "bugs": {
    "url": "https://github.com/t3chnoboy/amazon-product-api/issues"
  },
  "dependencies": {
    "es6-promise": "3.0.2",
    "request": "2.53.0",
    "xml2js": "0.4.5"
  },
  "description": "Amazon Product Advertising API client",
  "devDependencies": {
    "coffee-script": "1.7.1",
    "mocha": "1.20.1",
    "should": "4.0.4"
  },
  "directories": {
    "lib": "./lib/"
  },
  "dist": {
    "shasum": "9df440e71ecbc8da5fc985a9fc3d5a4171e11f1c",
    "tarball": "https://registry.npmjs.org/amazon-product-api/-/amazon-product-api-0.4.3.tgz"
  },
  "gitHead": "0f7094bd37ed3161a2ba7318a21672fdcb3ead80",
  "homepage": "https://github.com/t3chnoboy/amazon-product-api",
  "keywords": [
    "amazon",
    "aws",
    "product",
    "ads",
    "advertising"
  ],
  "license": "BSD-2-Clause",
  "main": "./lib/index.js",
  "maintainers": [
    {
      "name": "t3chnoboy",
      "email": "dmitry.mazuro@icloud.com"
    },
    {
      "name": "mastert",
      "email": "simonthiboutot.qc@gmail.com"
    }
  ],
  "name": "amazon-product-api",
  "optionalDependencies": {},
  "readme": "# Node.js client for the Amazon Product Advertising API\n\n[![NPM version](https://badge.fury.io/js/amazon-product-api.svg)](http://badge.fury.io/js/amazon-product-api) [![Dependency Status](https://gemnasium.com/t3chnoboy/amazon-product-api.svg)](https://gemnasium.com/t3chnoboy/amazon-product-api) [![Build Status](https://travis-ci.org/t3chnoboy/amazon-product-api.svg?branch=master)](https://travis-ci.org/t3chnoboy/amazon-product-api)\n\nNode.js client for [Amazon Product Advertising API](https://affiliate-program.amazon.com/gp/advertising/api/detail/main.html)\n![alt text](http://i.imgur.com/MwfPRfB.gif \"Logo Title Text 1\")\n\n[![NPM](https://nodei.co/npm/amazon-product-api.png?downloads=true)](https://nodei.co/npm/amazon-product-api/)\n\n\n## Installation\nInstall using npm:\n```sh\nnpm install amazon-product-api\n```\n\nInstall in Meteor:\n```sh\nmeteor add quackware:amazon-product-api\n```\n\n\n## Usage\n\nRequire library\n```javascript\nvar amazon = require('amazon-product-api');\n```\n\nCreate client\n```javascript\nvar client = amazon.createClient({\n  awsId: \"aws ID\",\n  awsSecret: \"aws Secret\",\n  awsTag: \"aws Tag\"\n});\n```\nNow you are ready to use the API!\n\n\n### ItemSearch\n\n> The ItemSearch operation searches for items on Amazon. The Product Advertising API returns up to ten items per search results page.\n\n[ðŸ“– Documentation](http://docs.aws.amazon.com/AWSECommerceService/latest/DG/ItemSearch.html)\n\nUsing promises:\n```javascript\nclient.itemSearch({\n  director: 'Quentin Tarantino',\n  actor: 'Samuel L. Jackson',\n  searchIndex: 'DVD',\n  audienceRating: 'R',\n  responseGroup: 'ItemAttributes,Offers,Images'\n}).then(function(results){\n  console.log(results);\n}).catch(function(err){\n  console.log(err);\n});\n```\n\nUsing a callback:\n```javascript\nclient.itemSearch({\n  director: 'Quentin Tarantino',\n  actor: 'Samuel L. Jackson',\n  searchIndex: 'DVD',\n  audienceRating: 'R',\n  responseGroup: 'ItemAttributes,Offers,Images'\n}, function(err, results, response) {\n  if (err) {\n    console.log(err);\n  } else {\n    console.log(results);  // products (Array of Object)\n    console.log(response); // response (Array where the first element is an Object that contains Request, Item, etc.)\n  }\n});\n```\n\nusing ecmascript6 generators and co:\n```javascript\nvar co = require('co');\n\nco(function *(){\n\n  pulpFiction   = client.itemSearch({ keywords: 'Pulp fiction',   searchIndex: 'DVD'});\n  killBill      = client.itemSearch({ keywords: 'Kill Bill',      searchIndex: 'DVD'});\n  reservoirDogs = client.itemSearch({ keywords: 'Reservoir Dogs', searchIndex: 'DVD'});\n\n  movies = yield [pulpFiction, killBill, reservoirDogs];\n  console.log(movies);\n\n})();\n```\n\n#### Query params:\n\nYou can add any [available params](http://docs.aws.amazon.com/AWSECommerceService/latest/DG/ItemSearch.html) for the *itemSearch* method:\n\n- [condition:](http://docs.aws.amazon.com/AWSECommerceService/latest/DG/ItemSearch.html) availiable options - 'All', 'New', 'Used', 'Refurbished', 'Collectible'. Defaults to 'All'.\n\n- [keywords:](http://docs.aws.amazon.com/AWSECommerceService/latest/DG/ItemSearch.html) Defaults to ''\n\n- [responseGroup:](http://docs.aws.amazon.com/AWSECommerceService/latest/DG/CHAP_ResponseGroupsList.html) You can use multiple values by separating them with comma (e.g responseGroup: 'ItemAttributes,Offers,Images'). Defaults to'ItemAttributes'\n\n- [searchIndex:](http://docs.aws.amazon.com/AWSECommerceService/latest/DG/USSearchIndexParamForItemsearch.html) Defaults to 'All'.\n\n- [itemPage:](http://docs.aws.amazon.com/AWSECommerceService/latest/DG/ItemSearch.html) Defaults to '1'.\n\n- [sort](http://docs.aws.amazon.com/AWSECommerceService/latest/DG/SortingbyPopularityPriceorCondition.html): Valid values include 'salesrank','psrank','titlerank','-price','price', etc.\n\n\n### ItemLookup\n\n> Given an Item identifier, the ItemLookup operation returns some or all of the item attributes, depending on the response group specified in the request.\n\n[ðŸ“– Documentation](http://docs.aws.amazon.com/AWSECommerceService/latest/DG/ItemLookup.html)\n\nUsing promises:\n```javascript\nclient.itemLookup({\n  idType: 'UPC',\n  itemId: '884392579524'\n}).then(function(results) {\n  console.log(JSON.stringify(results));\n}).catch(function(err) {\n  console.log(err);\n});\n```\n\nUsing a callback:\n```javascript\nclient.itemLookup({\n  idType: 'UPC',\n  itemId: '635753490879',\n  responseGroup: 'ItemAttributes,Offers,Images'\n}, function(err, results, response) {\n  if (err) {\n    console.log(err);\n  } else {\n    console.log(results);\n  }\n});\n```\n\n#### Query params:\n\nYou can add any [available params](http://docs.aws.amazon.com/AWSECommerceService/latest/DG/ItemLookup.html) for the *ItemLookup* method.\n\n- [condition:](http://docs.aws.amazon.com/AWSECommerceService/latest/DG/ItemLookup.html) availiable options - 'All', 'New', 'Used', 'Refurbished', 'Collectible'. Defaults to 'All'.\n\n- [idType:](http://docs.aws.amazon.com/AWSECommerceService/latest/DG/ItemLookup.html) Type of item identifier used to look up an item. Availiable options - 'ASIN', 'SKU', 'UPC', 'EAN', 'ISBN'. Defaults to 'ASIN'.\n\n- [includeReviewsSummary:](http://docs.aws.amazon.com/AWSECommerceService/latest/DG/ItemLookup.html) availiable options - 'True','False'. Defaults to 'True'.\n\n- [itemId:](http://docs.aws.amazon.com/AWSECommerceService/latest/DG/ItemLookup.html) One or more (up to ten) positive integers that uniquely identify an item.\n\n- [responseGroup:](http://docs.aws.amazon.com/AWSECommerceService/latest/DG/CHAP_ResponseGroupsList.html) You can use multiple values by separating them with comma (e.g responseGroup: 'ItemAttributes,Offers,Images'). Defaults to'ItemAttributes'.\n\n- [searchIndex:](http://docs.aws.amazon.com/AWSECommerceService/latest/DG/USSearchIndexParamForItemsearch.html) Defaults to 'All'.\n\n- [truncateReviewsAt:](http://docs.aws.amazon.com/AWSECommerceService/latest/DG/CHAP_ResponseGroupsList.html) Defaults to '1000'. To return complete reviews, specify '0'.\n\n- [variationPage:](http://docs.aws.amazon.com/AWSECommerceService/latest/DG/CHAP_ResponseGroupsList.html) Defaults to 'All'.\ndomain: Defaults to 'webservices.amazon.com'.\n\n\n### BrowseNodeLookup\n\n> Given a browse node ID, BrowseNodeLookup returns the specified browse nodeâ€™s name, children, and ancestors. The names and browse node IDs of the children and ancestor browse nodes are also returned. BrowseNodeLookup enables you to traverse the browse node hierarchy to find a browse node.\n\n[ðŸ“– Documentation](http://docs.aws.amazon.com/AWSECommerceService/latest/DG/BrowseNodeLookup.html)\n\nUsing promises:\n```javascript\nclient.browseNodeLookup({\n  browseNodeId: '549726',\n  responseGroup: 'NewReleases'\n}).then(function(results) {\n  console.log(results);\n}).catch(function(err) {\n  console.log(err);\n});\n```\n\nUsing a callback:\n```javascript\nclient.browseNodeLookup({\n  browseNodeId: '549726',\n  responseGroup: 'NewReleases'\n}, function(err, results, response) {\n  if (err) {\n    console.log(err);\n  } else {\n    console.log(results);\n  }\n});\n```\n\n#### Query params:\n\nYou can add any [available params](http://docs.aws.amazon.com/AWSECommerceService/latest/DG/BrowseNodeLookup.html) for the *BrowseNodeLookup* method.\n\n- [browseNodeId:](http://docs.aws.amazon.com/AWSECommerceService/latest/DG/BrowseNodeLookup.html) A positive integer assigned by Amazon that uniquely identifies a product category.\n\n- [responseGroup:](http://docs.aws.amazon.com/AWSECommerceService/latest/DG/CHAP_ResponseGroupsList.html) You can use multiple values by separating them with comma (e.g responseGroup: 'MostGifted,NewReleases,MostWishedFor,TopSellers'). Defaults to 'BrowseNodeInfo'.\n\n\n## Specify the endpoint\n\nTo use a different endpoint, you need the choose it from the [endpoints list](http://docs.aws.amazon.com/AWSECommerceService/latest/DG/AnatomyOfaRESTRequest.html#EndpointsandWebServices), then pass the **domain** of the endpoint URL to the `domain` param of your query.\n\nBy default, the domaine used is `webservices.amazon.com`.\n\n#### Example:\n\nI want to query the Canadian store ðŸ‡¨ðŸ‡¦ .\nThe endpoint URL is https://webservices.amazon.ca/onca/xml.\nThe **domain** of the endpoint is `webservices.amazon.ca`.\n\n```javascript\nvar query = {\n  artist: 'Radiohead',\n  searchIndex: 'Music',\n  sort: 'relevancerank',\n  itemPage: 1,\n  availability: 'Available',\n  responseGroup: 'OfferFull,Large,Images',\n  domain: 'webservices.amazon.ca'\n};\n\nclient.itemSearch(query, function (error, results) {\n  if (error) {\n    console.log(error);\n  } else {\n    console.log(results);\n  }\n})\n```\n\n\n## Passing a custom `request`\n\nYou can pass a custom `request` function to be used, for example if you are throttling requests.\n\n```javascript\nvar request = require('request');\nvar throttledRequest = require('throttled-request')(request);\n\nclient.itemSearch({\n  request: throttledRequest\n  // ...\n});\n```\n\n\n## Example\n\nSetup your own server that doesn't require signatures and timestamp.\n\n```javascript\nvar amazon = require('amazon-product-api'),\n    koa = require('koa'),\n    router = require('koa-router');\n\nvar app = koa();\napp.use(router(app));\n\n\nvar client = amazon.createClient({\n  awsTag: process.env.AWS_TAG,\n  awsId: process.env.AWS_ID,\n  awsSecret: process.env.AWS_SECRET\n});\n\n\napp.get('/amazon/:index', function* (){\n  this.body = yield client.itemSearch({\n    keywords: this.query.title,\n    searchIndex: this.params.index,\n    responseGroup: 'ItemAttributes,Offers,Images'\n  });\n});\n\napp.listen(3000);\n```\n\nWorking demo:\n- [Search for Alien DVDs](http://watchlist-koa.herokuapp.com/amazon/DVD?title=alien) | [Mirror](https://juancrg90-watchlist-koa.herokuapp.com/amazon/DVD?title=alien)\n- [Search for Streets of Rage videogame](http://watchlist-koa.herokuapp.com/amazon/VideoGames?title=streets%20of%20rage) | [Mirror](https://juancrg90-watchlist-koa.herokuapp.com/amazon/VideoGames?title=streets%20of%20rage)\n- [Search for shoes](http://watchlist-koa.herokuapp.com/amazon/Shoes?title=nike) | [Mirror](https://juancrg90-watchlist-koa.herokuapp.com/amazon/Shoes?title=nike)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/t3chnoboy/amazon-product-api.git"
  },
  "scripts": {
    "test": "mocha"
  },
  "version": "0.4.3"
}
