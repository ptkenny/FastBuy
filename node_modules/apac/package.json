{
  "_args": [
    [
      {
        "raw": "apac",
        "scope": null,
        "escapedName": "apac",
        "name": "apac",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "C:\\Users\\Patrick\\Documents\\fastbuy"
    ]
  ],
  "_from": "apac@latest",
  "_id": "apac@3.0.2",
  "_inCache": true,
  "_location": "/apac",
  "_nodeVersion": "6.9.1",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/apac-3.0.2.tgz_1484611180084_0.00034383172169327736"
  },
  "_npmUser": {
    "name": "dmcquay",
    "email": "dmcquay@gmail.com"
  },
  "_npmVersion": "3.10.8",
  "_phantomChildren": {
    "lodash": "4.17.4",
    "sax": "0.6.1"
  },
  "_requested": {
    "raw": "apac",
    "scope": null,
    "escapedName": "apac",
    "name": "apac",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/apac/-/apac-3.0.2.tgz",
  "_shasum": "1a0d6fddc0183ba4c66b6119082485d8c24f474f",
  "_shrinkwrap": null,
  "_spec": "apac",
  "_where": "C:\\Users\\Patrick\\Documents\\fastbuy",
  "author": {
    "name": "Dustin McQuay",
    "email": "dmcquay@gmail.com"
  },
  "bugs": {
    "url": "http://github.com/dmcquay/node-apac/issues"
  },
  "dependencies": {
    "xml2js": "^0.4.17"
  },
  "description": "Amazon Product Advertising API Client for Node",
  "devDependencies": {
    "chai": "3.5.0",
    "dotenv": "4.0.0",
    "mocha": "3.2.0",
    "proxyquire": "1.7.10",
    "sinon": "1.17.7"
  },
  "directories": {
    "lib": "./lib/"
  },
  "dist": {
    "shasum": "1a0d6fddc0183ba4c66b6119082485d8c24f474f",
    "tarball": "https://registry.npmjs.org/apac/-/apac-3.0.2.tgz"
  },
  "engines": {
    "node": ">=4.0.0"
  },
  "gitHead": "32e520ac91b1e94706a59bdfe58584f806c0c852",
  "homepage": "https://github.com/dmcquay/node-apac#readme",
  "keywords": [
    "Amazon Product Advertising API",
    "AWS"
  ],
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/dmcquay/node-apac/raw/master/LICENSE"
    }
  ],
  "main": "./lib/apac",
  "maintainers": [
    {
      "name": "dmcquay",
      "email": "dmcquay@gmail.com"
    },
    {
      "name": "wesleyyue",
      "email": "wesleyiyue@gmail.com"
    }
  ],
  "name": "apac",
  "optionalDependencies": {},
  "readme": "[![Build Status](https://travis-ci.org/dmcquay/node-apac.svg?branch=master)](https://travis-ci.org/dmcquay/node-apac)\n\n# node-apac - Node.js client for the Amazon Product Advertising API.\n\napac (Amazon Product Advertising Client) will allow you to access the Amazon Product Advertising API from Node.js.\n[Learn more about the Amazon Product Advertising API](https://affiliate-program.amazon.com/gp/advertising/api/detail/main.html).\n\nnode-apac is just a thin wrapper around Amazon's API. The only intent is to take care of request signatures, performing\nthe HTTP requests, processing the responses and parsing the XML. You should be able to run any operation because the\noperation and all parameters are passed directly to the execute method just as they will be passed to Amazon. The result\nis that you feel like you're working directly with the API, but you don't have to worry about some of the more tedious\ntasks.\n \n\n## Installation\n\nInstall using npm:\n```bash\n$ npm install apac\n```\n\n## Quick Start\n\nHere's a quick example:\n```javascript\nconst {OperationHelper} = require('apac');\n\nconst opHelper = new OperationHelper({\n    awsId:     '[YOUR AWS ID HERE]',\n    awsSecret: '[YOUR AWS SECRET HERE]',\n    assocId:   '[YOUR ASSOCIATE TAG HERE]'\n});\n\nopHelper.execute('ItemSearch', {\n  'SearchIndex': 'Books',\n  'Keywords': 'harry potter',\n  'ResponseGroup': 'ItemAttributes,Offers'\n}).then((response) => {\n    console.log(\"Results object: \", response.result);\n    console.log(\"Raw response body: \", response.responseBody);\n}).catch((err) => {\n    console.error(\"Something went wrong! \", err);\n});\n```\n\nExample Response:\n\n```javascript\n{\n    ItemSearchResponse: {\n        OperationRequest: [Object],\n        Items: [Object]\n    }\n}\n```\n\n## API Documentation\n\nSince we just wrap the Amazon Product Advertising API, you'll reference their API docs:\n[API Reference](http://docs.amazonwebservices.com/AWSECommerceService/latest/DG/index.html?ProgrammingGuide.html)\n\n## Obtaining credentials\n\nSign up here: https://affiliate-program.amazon.com/gp/advertising/api/detail/main.html\n\nThis will also direct you where to get your security credentials (accessKeyId and secretAccessKey)\n\nYou will also need to go here: http://docs.aws.amazon.com/AWSECommerceService/latest/DG/becomingAssociate.html\nand click on one of the locale specific associate websites to sign up as an associate and get an associate ID,\nwhich is required for all API calls.\n\n## Throttling / Request Limits\n\nBy default, Amazon limits you to one request per second per IP. This limit increases with revenue performance. Learn\nmore here: http://docs.aws.amazon.com/AWSECommerceService/latest/DG/TroubleshootingApplications.html\n\nTo help you ensure you don't exceed the request limit, we provide an automatic throttling feature. By default, apac will\nnot throttle. To enable throttling, set the maxRequestsPerSecond param when constructing your OperationHelper.\n\n```javascript\nvar opHelper = new OperationHelper({\n    awsId:     '[YOUR AWS ID HERE]',\n    awsSecret: '[YOUR AWS SECRET HERE]',\n    assocId:   '[YOUR ASSOCIATE TAG HERE]',\n    maxRequestsPerSecond: 1\n});\n```\n\n## Locales\n\nTo use a locale other than the default (US), set the locale parameter.\n\n```javascript\nvar opHelper = new OperationHelper({\n    awsId:     '[YOUR AWS ID HERE]',\n    awsSecret: '[YOUR AWS SECRET HERE]',\n    assocId:   '[YOUR ASSOCIATE TAG HERE]',\n    locale:    'IT'\n});\n```\n\n**Supported Locales**\n\nID|Locale|Endpoint\n---|---|---\nBR|Brazil|webservices.amazon.com.br\nCA|Canada|webservices.amazon.ca\nCN|China|webservices.amazon.cn\nFR|France|webservices.amazon.fr\nDE|Germany|webservices.amazon.de\nIN|India|webservices.amazon.in\nIT|Italy|webservices.amazon.it\nJP|Japan|webservices.amazon.co.jp\nMX|Mexico|webservices.amazon.com.mx\nES|Spain|webservices.amazon.es\nUK|United Kingdom|webservices.amazon.co.uk\nUS|United States|webservices.amazon.com\n\n## Contributing\n\nFeel free to submit a pull request. If you'd like, you may discuss the change with me first by submitting an issue.\nPlease test all your changes. Current tests are located in lib/*.specs.js (next to each file under test).\n\nExecute tests with `npm test`\n\nExecute acceptance tests with `npm run test:acceptance`.\nFor acceptance tests, you must set these environment variables first:\n\n```\nAWS_ACCESS_KEY_ID=[VALUE]\nAWS_SECRET_ACCESS_KEY=[VALUE]\nAWS_ASSOCIATE_ID=[VALUE]\n```\n\nYou can set these values in your environment or in `test/acceptance/.env`.\n\n## License\n\nCopyright (c) 2016 Dustin McQuay. All rights reserved.\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/dmcquay/node-apac.git"
  },
  "scripts": {
    "test": "mocha lib/*.specs.js",
    "test:acceptance": "mocha test/acceptance/*.specs.js || true"
  },
  "version": "3.0.2"
}
